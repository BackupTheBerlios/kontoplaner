<?xml version="1.0" encoding="ISO-8859-1"?>

<project basedir=".." default="all" name="All">

    <target name="init" description="inits the build">

        <property environment="env"/>

		<property name="define.pluginname"   value="kontoplaner"/>
		<property name="define.jarfilename"  value="${define.pluginname}.jar"/>
		<property name="define.srcfilename"  value="${define.pluginname}.src.zip"/>
		<property name="define.package"      value="de.pallo.jameica.kontoplaner"/>

        <property name="build.dir" 			 value="build"/>
		<buildnumber file="${build.dir}/BUILD"/>
	    <loadfile property="version" srcFile="${build.dir}/RELEASE">
	      <filterchain>
	        <striplinebreaks/>
	      </filterchain>
	    </loadfile>

		<echo message="VERSION: ${version}"/>
		<echo message="BUILD  : ${build.number}"/>

        <property name="project.release"	 value="releases/${version}-${build.number}/${define.pluginname}"/>
        <property name="project.src" 		 value="${project.release}/src/classes"/>
        <property name="project.tmp" 		 value="${project.release}/tmp"/>
        <property name="project.javadoc" 	 value="${project.release}/javadoc"/>
        <property name="src.dir" 			 value="src"/>
        <property name="icon.dir" 			 value="${src.dir}/img"/>
        <property name="lang.dir" 			 value="${src.dir}/lang"/>
        <property name="help.dir" 			 value="${src.dir}/help"/>
        <property name="lib.dir" 			 value="lib"/>
        <property name="sql.dir" 			 value="sql"/>
        <property name="class.dir" 			 value="${project.tmp}/bin"/>

	    <property name="project.zipdir"        value="${project.release}/${define.pluginname}"/>
	    <property name="project.zipfilename"   value="${define.pluginname}.zip"/>

		<path id="compilepath">
            <pathelement location="lib/hibiscus.jar"/>
            <pathelement location="../jameica-1.4/lib/swt/win32/swt.jar"/>
			<pathelement location="../jameica-1.4/bin/"/>
		    <pathelement location="../jameica-1.4/lib/de_willuhn_ds/de_willuhn_ds.jar" />
		    <pathelement location="../jameica-1.4/jameica.jar" />
            <pathelement location="../jameica-1.4/lib/de_willuhn_util/de_willuhn_util.jar" />
		</path>

    </target>


    <target depends="init" name="compile" description="compiles everything">

        <mkdir dir="${class.dir}"/>

		<javac fork="true" debug="true" deprecation="true" destdir="${class.dir}" srcdir="${src.dir}">
			<classpath refid="compilepath" />
        </javac>

        <rmic verify="true" base="${class.dir}">
            <include name="**/*.class"/>
			<classpath refid="compilepath" />
        </rmic>

		<copy todir="${class.dir}/lang">
			<fileset dir="${lang.dir}" />
		</copy>
		<copy todir="${class.dir}/help">
			<fileset dir="${help.dir}" />
		</copy>

		<copy file="${src.dir}/plugin.xml"  tofile="${class.dir}/plugin.xml" />

	</target>


	<target depends="compile" name="cvstag" description="tags the source in the CVS">

<!--	    <exec executable="cvs" failonerror="true" dir="${basedir}">
	      <arg line="tag ${version}_BUILD_${build.number}"/>
	    </exec>
-->
	</target>


    <target depends="compile" name="jar" description="generates the jar file">

        <mkdir dir="${project.release}"/>
	    <mkdir dir="${project.zipdir}"/>

	    <jar destfile="${project.zipdir}/${define.jarfilename}">
		    <manifest>
		    	<attribute name="Built-By" value="${user.name}"/>
		    	<attribute name="Implementation-Title" value="${define.pluginname}"/>
		    	<attribute name="Implementation-Version" value="${version}"/>
		    	<attribute name="Implementation-Buildnumber" value="${build.number}"/>
		    	<attribute name="Class-Path" value="lang help lib"/>
		    </manifest>
		    <fileset dir="${class.dir}"/>
		</jar>

		<mkdir dir="${project.zipdir}/sql"/>
		<copy todir="${project.zipdir}/sql">
			<fileset dir="${sql.dir}"/>
		</copy>

		<!-- Jetzt muessen wir noch das ZIP-File erzeugen und signieren -->
		<zip destfile="${project.release}/${project.zipfilename}">
		    <fileset dir="${project.release}">
		    	<include name="${define.pluginname}"/>
		    	<include name="${define.pluginname}/**"/>
		    </fileset>
		</zip>

    </target>

    <target depends="jar" name="javadoc" description="creates the api doc">

        <mkdir dir="${project.javadoc}"/>

        <javadoc destdir="${project.javadoc}" packagenames="${define.package}.*">
			<classpath refid="compilepath" />
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
        </javadoc>

    </target>

  <target depends="compile" name="src" description="build source package, depends compile target to make sure, the code has no errors">
    <mkdir dir="${project.release}"/>
	<mkdir dir="${project.tmp}/${define.pluginname}" />
	<copy todir="${project.tmp}/${define.pluginname}">
		<fileset dir=".">
			<include name=".project" />
			<include name=".classpath" />
			<include name="${src.dir}/**" />
			<include name="${sql.dir}/**" />
			<include name="${build.dir}/**" />
			<exclude name="${build.dir}/BUILD" />
		</fileset>
	</copy>
	<zip casesensitive="true" zipfile="${project.release}/${define.srcfilename}">
		<fileset dir="${project.tmp}">
			<include name="${define.pluginname}/**" />
		</fileset>
	</zip>
  </target>

    <target name="clean" description="cleanup">
       <!-- <delete dir="${project.tmp}"/>-->
    </target>


    <target depends="init,compile,cvstag,jar,javadoc,src,clean" description="build an official release" name="all" />

    <target depends="init,compile,jar,src,clean" description="build inofficial release" name="fast" />

</project>
